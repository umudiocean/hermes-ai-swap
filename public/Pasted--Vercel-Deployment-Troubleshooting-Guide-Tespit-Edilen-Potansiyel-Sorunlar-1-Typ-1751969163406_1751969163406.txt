# Vercel Deployment Troubleshooting Guide

## üîç Tespit Edilen Potansiyel Sorunlar

### 1. **TypeScript Konfig√ºrasyon Sorunu**
```json
// tsconfig.json - D√ºzeltme gerekli
{
  "compilerOptions": {
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    // Bu ayarlar false olmamalƒ±, build hatalarƒ±na sebep olabilir
  }
}
```

### 2. **Vite Konfig√ºrasyon Optimizasyonu**
```typescript
// vite.config.ts - G√ºncellenmi≈ü versiyon
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "src"),
    },
  },
  build: {
    outDir: "dist",
    assetsDir: "assets",
    sourcemap: false,
    minify: "esbuild",
    target: "esnext",
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['react', 'react-dom'],
          web3: ['ethers', '@web3modal/ethers', '@web3modal/core', '@web3modal/ui'],
          ui: ['@radix-ui/react-dialog', '@radix-ui/react-select', '@radix-ui/react-toast'],
          utils: ['clsx', 'tailwind-merge', 'class-variance-authority']
        }
      }
    }
  },
  define: {
    global: 'globalThis',
  },
  optimizeDeps: {
    include: ['react', 'react-dom', 'ethers', '@web3modal/ethers'],
    exclude: ['@web3modal/siwe'] // SIWE ≈üu an kullanƒ±lmƒ±yor, exclude edebiliriz
  }
});
```

### 3. **Vercel Konfig√ºrasyon G√ºncellemesi**
```json
{
  "version": 2,
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "installCommand": "npm install --legacy-peer-deps",
  "framework": "vite",
  "functions": {
    "app/api/**/*.js": {
      "runtime": "nodejs18.x"
    }
  },
  "rewrites": [
    {
      "source": "/(.*)",
      "destination": "/index.html"
    }
  ],
  "headers": [
    {
      "source": "/assets/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ]
    },
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ]
    }
  ]
}
```

## üõ†Ô∏è Adƒ±m Adƒ±m √á√∂z√ºm

### 1. **Package.json Script G√ºncellemesi**
```json
{
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "type-check": "tsc --noEmit --skipLibCheck"
  }
}
```

### 2. **Environment Variables Kontrol√º**
Vercel Dashboard'da ≈üu environment variable'larƒ± ekleyin:
- `VITE_WEB3_PROJECT_ID`: WalletConnect Project ID
- `VITE_NETWORK_ID`: 56
- `VITE_RPC_URL`: https://bsc-dataseed1.binance.org/

### 3. **TypeScript Konfig√ºrasyon D√ºzeltmesi**
```json
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist", "build"]
}
```

### 4. **Dependency G√ºncellemesi**
```bash
# Node modules'u temizle
rm -rf node_modules package-lock.json

# Yeniden install
npm install --legacy-peer-deps

# Build test
npm run build
```

## üö® Yaygƒ±n Vercel Hatalarƒ± ve √á√∂z√ºmleri

### **Error: "Module not found"**
```bash
# √á√∂z√ºm: Dependencies'leri kontrol edin
npm install --save-dev @types/node
```

### **Error: "Build failed"**
```bash
# √á√∂z√ºm: TypeScript strict mode'u ge√ßici olarak kapatƒ±n
"strict": false
```

### **Error: "Memory limit exceeded"**
```json
// vercel.json'a ekleyin
{
  "functions": {
    "app/**/*.js": {
      "maxDuration": 30
    }
  }
}
```

### **Error: "Environment variables not found"**
- Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables
- Local development i√ßin `.env` dosyasƒ±
- Production i√ßin Vercel UI'dan ekleyin

## üìã Deployment Checklist

- [ ] `npm run build` lokal olarak √ßalƒ±≈üƒ±yor
- [ ] Environment variables Vercel'da tanƒ±mlandƒ±
- [ ] `vercel.json` doƒüru konfig√ºre edildi
- [ ] TypeScript hatalarƒ± √ß√∂z√ºld√º
- [ ] Dependencies g√ºncel ve √ßakƒ±≈üma yok
- [ ] Build output size kontrol edildi (< 100MB)

## üîß Debug Komutlarƒ±

```bash
# Lokal build test
npm run build

# TypeScript kontrol
npm run type-check

# Vercel CLI ile debug
npx vercel --debug

# Build log'larƒ± kontrol
vercel logs
```

## üéØ √ñnerilen Deployment S√ºreci

1. **Lokal Test**: `npm run build` √ßalƒ±≈ütƒ±rƒ±n
2. **Git Push**: Deƒüi≈üiklikleri commit edin
3. **Vercel Sync**: Otomatik deploy olsun
4. **Environment Check**: Variables kontrol edin
5. **Domain Test**: Deployed URL'yi test edin

## üìû Acil Destek

Hala sorun ya≈üƒ±yorsanƒ±z:
1. Vercel build log'larƒ±nƒ± payla≈üƒ±n
2. Console error'larƒ±nƒ± kontrol edin
3. Network tab'ƒ±nƒ± inceleyin
4. Browser compatibility'yi test edin